generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
  output     = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("AUTH_SERVER_DATABASE_URL")
}

model Customer {
  name     String @map("name") @db.VarChar(255)
  email    String @unique @map("email") @db.VarChar(255)
  whatsApp String @unique @map("whatsapp") @db.VarChar(255)

  id        String    @id @unique @map("id") @db.Uuid()
  createdAt DateTime  @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  customerPending CustomerPending[] @relation("customer_pending_customer")

  @@index([id])
  @@index([whatsApp])
  @@index([email])
  @@map("customers")
}

enum CustomerPendingType {
  EMAIL_VERIFICATION
  WHATSAPP_VERIFICATION
}

model CustomerPending {
  type CustomerPendingType @map("type")

  customerID String   @map("customer_id") @db.Uuid()
  customer   Customer @relation(fields: [customerID], references: [id], name: "customer_pending_customer", onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime  @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  @@id([type, customerID])
  @@unique([type, customerID])
  @@index([customerID])
  @@map("customer_pendings")
}
